// src/App.js
import React, { useState } from 'react';
import axios from 'axios';
import InputForm from './components/InputForm';
import PieChartComponent from './components/PieChartComponent';
import BarChartComponent from './components/BarChartComponent';
import './App.css';

function App() {
  const [stock, setStock] = useState('');
  const [redditCounts, setRedditCounts] = useState(null);
  const [redditTrend, setRedditTrend] = useState(null);
  const [newsCounts, setNewsCounts] = useState(null);
  const [newsTrend, setNewsTrend] = useState(null);
  const [newsName, setNewsName] = useState('');
  const [redditName, setRedditName] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const newsRes = await axios.get(`http://localhost:5000/news-analyze?stock=${stock}`);
      setNewsCounts(newsRes.data.sentiment_counts);
      setNewsTrend(newsRes.data.trend_data);
      setNewsName(stock);

      const redditRes = await axios.get(`http://localhost:5000/analyze?stock=${stock}`);
      setRedditCounts(redditRes.data.sentiment_counts);
      setRedditTrend(redditRes.data.trend_data);
      setRedditName(stock);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  return (
    <div className="app-container">
      <div className="app-header">
      <h1>ðŸ“ˆ Stock Sentiment Analyzer</h1>
        <p>Analyze stock sentiment from Reddit and News in real-time</p>
      </div>

      <div className="form-wrapper">
        <InputForm stock={stock} setStock={setStock} handleSubmit={handleSubmit} />
      </div>

      {newsCounts && newsTrend && (
        <>
          <div className="pie-charts">
            <div className="chart-card">
              <h2>News Sentiment of: {newsName}</h2>
              <PieChartComponent sentimentCounts={newsCounts} />
            </div>
            <div className="chart-card bar-chart-card">
              <h2>News Sentiment Trend</h2>
              <BarChartComponent trendData={newsTrend} />
            </div>
          </div>
        </>
      )}

      {redditCounts && redditTrend && (
        <>
          <div className="pie-charts">
            <div className="chart-card">
              <h2>Reddit Sentiment of: {redditName}</h2>
              <PieChartComponent sentimentCounts={redditCounts} />
            </div>
            <div className="chart-card bar-chart-card">
              <h2>Reddit Sentiment Trend</h2>
              <BarChartComponent trendData={redditTrend} />
            </div>
          </div>
        </> 
      )}
    </div>
  );
}

export default App;


--------
/* src/App.css */

body {
  margin: 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background: #f7f9fc;
  color: #333;
}

.app-container {
  padding: 20px;
  max-width: 1200px;
  margin: auto;
}

.app-header {
  text-align: center;
  margin-bottom: 30px;
}

.app-header h1 {
  font-size: 2.5rem;
  color: #1976d2;
}

.app-header p {
  font-size: 1.2rem;
  color: #555;
}

.form-wrapper {
  display: flex;
  justify-content: center;
  margin-bottom: 40px;
}

.pie-charts {
  display: flex;
  gap: 20px;
  justify-content: center;
  flex-wrap: wrap;
  margin-bottom: 40px;
}

.chart-card {
  background: white;
  border-radius: 12px;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
  padding: 20px;
  flex: 1;
  min-width: 300px;
  max-width: 550px;
  transition: transform 0.3s ease;
}

.chart-card:hover {
  transform: translateY(-5px);
}

.chart-card h2 {
  text-align: center;
  margin-bottom: 10px;
  color: #333;
}

.bar-chart-card {
  margin-bottom: 40px;
}

input[type="text"] {
  padding: 10px;
  font-size: 1rem;
  width: 300px;
  border: 1px solid #ccc;
  border-radius: 6px;
  outline: none;
  margin-right: 10px;
}

button {
  padding: 10px 20px;
  background-color: #1976d2;
  color: white;
  font-weight: bold;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #115293;
}
